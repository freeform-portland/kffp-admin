version: 2
jobs:
  build:
    working_directory: ~/freeform-portland/kffp-admin
    parallelism: 1
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    docker:
      - image: circleci/node:6.14.4-stretch-browsers
    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    # Dependencies
    # Restore the dependency cache
    - restore_cache:
        keys:
        # This branch if available
        - v1-dep-{{ .Branch }}-
        # Default branch if not
        - v1-dep-develop-
        # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
        - v1-dep-
    - run: yarn
    # Save dependency cache
    - save_cache:
        key: v1-dep-{{ .Branch }}-{{ epoch }}
        paths:
        - ~/.cache/yarn
        - ./node_modules
    # Test
    - run: 'true'
    # Deployment
    # Teardown
    # Save test results
    - store_test_results:
        path: /tmp/circleci-test-results
    # Save artifacts
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: /tmp/circleci-test-results

  deploy:
    docker:
      - image: circleci/node:6.14.4-stretch-browsers
    working_directory: ~/freeform-portland/kffp-admin
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: sudo apt-get install python-pip && sudo pip install awsebcli
      - run:
          name: Install dependencies
          command: yarn
      - run:
          name: Echo openssl version
          command: openssl version
      - run:
          name: Echo KEY
          command: echo $KEY
      - run:
          name: Generate .env file
          command: openssl aes-256-cbc -d -in secrets -k $KEY -out .env
      - run:
          name: Build application
          command: cd yarn build:production
      - run:
          name: Package the application for uploading to Elastic Beanstalk
          command: zip -r kffpadmin.zip .
      - run:
          name: Deploy the application to Elastic Beanstalk
          command: ls -al ~/freeform-portland/kffp-admin
      # - eb deploy --timeout 20 --verbose

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              # only: master
              only: circle-v2
